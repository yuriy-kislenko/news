/*!
 * fastshell
 * Fiercely quick and opinionated front-ends
 * https://HosseinKarami.github.io/fastshell
 * @author Hossein Karami
 * @version 1.0.5
 * Copyright 2018. MIT licensed.
 */
@import url("https://fonts.googleapis.com/css?family=Titillium+Web:300,400,400i,700");.clear:after,.clear:before{content:" ";display:table}.clear{*zoom:1}.clear:after{clear:both}*{box-sizing:border-box;font-smoothing:antialiased;text-rendering:optimizeLegibility}html{font-size:62.5%;background:radial-gradient(ellipse at center,#f7f6f0 0,#c2ba8c 80%,#b0a66b 100%)}body{font:300 13px/1.6 Helvetica Neue,Helvetica,Arial;color:#444;transition:all .4s ease-in .3s}body,html{min-height:100vh}

/*! normalize.css v4.1.1 | MIT License | github.com/necolas/normalize.css */html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block}audio:not([controls]){display:none;height:0}progress{vertical-align:baseline}[hidden],template{display:none}a{background-color:transparent;-webkit-text-decoration-skip:objects}a:active,a:hover{outline-width:0}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:inherit;font-weight:bolder}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}svg:not(:root){overflow:hidden}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}button,input,select,textarea{font:inherit;margin:0}optgroup{font-weight:700}button,input{overflow:visible}button,select{text-transform:none}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-input-placeholder{color:inherit;opacity:.54}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}.header{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between;padding:20px 0}.header .nav ul li{float:left;margin-right:25px}.header .nav ul li:last-child{margin-right:0}.header .nav ul li a{text-decoration:none;color:#000;font-size:13px;transition:all .2s ease-in-out;font-weight:700;letter-spacing:-.51px;font-family:Arial,Helvetica Neue,Helvetica,sans-serif}.header .nav ul li a:hover{color:#ae3b44}@media only screen and (max-width:700px){.header .nav .menu-list .menu-item{margin-right:10px}}.topmenu>li{display:inline-block;position:relative;margin-right:-4px;border-left:1px solid #ecf1f2}.topmenu>li:last-child{border-right:1px solid #ecf1f2}.topmenu>li>a{font-weight:700;padding:20px 30px;font-size:12px;text-transform:uppercase;letter-spacing:2px;color:#1c1c1c}.active:after,.submenu-link:after{content:"\f107";font-family:FontAwesome;color:inherit;margin-left:10px}.submenu li a:hover,.topmenu .active,.topmenu>li>a:hover{color:#ddbe86}.submenu{position:absolute;left:-150%;z-index:1;width:240px;border-bottom:1px solid #ecf1f2;visibility:hidden;opacity:0;transform:translateY(10px);transition:.3s ease-in-out;padding-left:0;top:30px}.submenu li{position:relative;border-bottom:1px solid #232425;min-width:205px}.submenu a{background:#212121;color:#9ca0a2!important;text-align:left;font-size:14px;letter-spacing:1px;padding:10px;display:list-item}.submenu a:hover{color:#fff!important}.submenu .submenu{position:absolute;top:0;left:calc(105% - 1px);left:-webkit-calc(105% - 1px)}nav li:hover>.submenu{visibility:visible;opacity:1;transform:translateY(0);border-bottom:0}.rel-pos{position:relative}.triangle-top:before{content:"\f0d8";top:-15px;left:36%}.triangle-right:before,.triangle-top:before{font-family:fontAwesome;position:absolute;font-size:16px}.triangle-right:before{content:"\f0da";top:9px;left:-9px}.nav ul{list-style:none}html{background:none}body{background:url(../img/top-bg.png);background-repeat:no-repeat;background-size:cover}.main .header__section{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row;background:#ae3b44;border-top:7px solid;position:relative}.main .header__section .header__section--image{margin-right:35px}.main .header__section .header__section--image img{margin-bottom:-5px}.main .header__section .header__section--heading{margin-right:85px}.main .header__section .header__section--heading p{color:#edf2f5;font-family:Arial,Helvetica Neue,Helvetica,sans-serif;font-size:24px;font-weight:400;letter-spacing:-.16px;white-space:nowrap;padding-top:10px;margin-top:0;margin-bottom:0}.main .header__section .header__section--descriptions{margin-right:35px}.main .header__section .header__section--descriptions p{text-align:justify;color:#222;font-family:Arial,Helvetica Neue,Helvetica,sans-serif;font-size:12px;font-weight:400;line-height:19px;padding-top:25px;margin-top:0;margin-bottom:0}.main .header__section .header__section--links{display:-ms-flexbox;display:flex;position:absolute;right:35px;bottom:20px;font-size:10px}.main .header__section .header__section--links a:first-child{margin-right:15px}.main .header__section .header__section--links a{color:#fff;transition:all .2s ease-in-out}.main .header__section .header__section--links a:hover{color:#9e9e9e}.main .container__section{min-width:100%;display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row;border-bottom:1px solid #5559602b}.main .container__section .catalog{width:251px;border-right:1px solid #5559602b}.main .container__section .catalog .catalog__heading{background:repeating-linear-gradient(-60deg,#0000,#55555538 1px,transparent 0,transparent 5px)}.main .container__section .catalog .catalog__heading p{color:#212121;font-family:Arial,Helvetica Neue,Helvetica,sans-serif;font-size:18px;font-weight:400;letter-spacing:-.12px;padding-left:15px;padding-top:10px;padding-bottom:10px;border-bottom:1px solid #5559602b}.main .container__section .catalog .catalog__accordion{transition:all .2s ease-in-out;margin-top:-20px}.main .container__section .catalog .catalog__accordion ul>li{list-style-type:none;position:relative}.main .container__section .catalog .catalog__accordion .animated{padding-left:0}.main .container__section .catalog .catalog__accordion .cd-accordion-menu input[type=checkbox]{position:absolute;opacity:0}.main .container__section .catalog .catalog__accordion .cd-accordion-menu a,.main .container__section .catalog .catalog__accordion .cd-accordion-menu label{position:relative;display:block;padding:18px 18px 18px 15px;background:transparent;box-shadow:inset 0 -1px #5559602b;color:#000;font-size:1.6rem;font-weight:600;text-decoration:none;background:fefefe;transition:all .2s ease-in-out;font-family:Arial,Helvetica Neue,Helvetica,sans-serif;font-size:12px}.main .container__section .catalog .catalog__accordion .cd-accordion-menu a:hover,.main .container__section .catalog .catalog__accordion .cd-accordion-menu label:hover{color:#ae3b44}.main .container__section .catalog .catalog__accordion .cd-accordion-menu a:active,.main .container__section .catalog .catalog__accordion .cd-accordion-menu label:active{color:#fff;background:#ae3b44}.main .container__section .catalog .catalog__accordion .cd-accordion-menu ul{display:none}.main .container__section .catalog .catalog__accordion .cd-accordion-menu input[type=checkbox]:checked+label+ul,.main .container__section .catalog .catalog__accordion .cd-accordion-menu input[type=checkbox]:checked+label:nth-of-type(n)+ul{display:block}.main .container__section .page__content{padding:0 0 35px 35px;width:730px}.main .container__section .page__content .article-head{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between;border-bottom:1px solid #5559602b}.main .container__section .page__content .article-head .article__heading{max-width:412px}.main .container__section .page__content .article-head .article__heading p{color:#3d3d3d;font-family:Arial,Helvetica Neue,Helvetica,sans-serif;font-size:24px;font-weight:400;letter-spacing:-.16px}.main .container__section .page__content .article-head .article__date{padding:20px 30px;display:inline-block;width:80px;height:90px;background:repeating-linear-gradient(-60deg,#0000,#55555538 1px,transparent 0,transparent 5px);margin-top:34px}.main .container__section .page__content .article-head .article__date p{margin-top:0;margin-bottom:0}.main .container__section .page__content .article-head .article__date p:first-child{opacity:.4;color:#3c3c3c;font-family:Arial,Helvetica Neue,Helvetica,sans-serif;font-size:17px;font-weight:400;text-transform:uppercase;letter-spacing:-.12px}.main .container__section .page__content .article-head .article__date p:nth-child(2),.main .container__section .page__content .article-head .article__date p:nth-child(3){opacity:.5;color:#939799;font-family:Arial,Helvetica Neue,Helvetica,sans-serif;font-size:10px;font-weight:400;line-height:10px;text-transform:uppercase}.main .container__section .page__content .article-descriptions{border-bottom:1px solid #5559602b}.main .container__section .page__content .article-descriptions p{color:#909293;font-family:Arial,Helvetica Neue,Helvetica,sans-serif;font-size:15px;font-weight:400;font-style:italic;line-height:21px;margin-top:25px;margin-bottom:25px;text-align:justify}.main .container__section .page__content .article-text-head{margin-top:25px;margin-bottom:25px}.main .container__section .page__content .article-text-head p{color:#ae3b44;font-family:Arial,Helvetica Neue,Helvetica,sans-serif;font-size:15px;font-weight:400;letter-spacing:-.1px}.main .container__section .page__content .article-text .first__image{position:relative;margin-left:50%;left:-245px}.main .container__section .page__content .article-text .img2{float:left;margin-top:25px;margin-bottom:25px;margin-right:30px}.main .container__section .page__content .article-text p{color:#3c3c3c;font-family:Arial,Helvetica Neue,Helvetica,sans-serif;font-size:12px;font-weight:400;line-height:19px;text-align:justify;padding-bottom:25px;border-bottom:1px solid #5559602b}.main .container__section .page__content .article-text p:first-child{margin-bottom:25px}.main .container__section .page__content .article-text p:nth-child(3){opacity:.5;color:#3c3c3c;font-family:Arial,Helvetica Neue,Helvetica,sans-serif;font-size:11px;font-weight:400;line-height:19px;text-align:center}.main .container__section .page__content .article-text .article-text2{margin-top:25px;margin-bottom:25px}.main .container__section .page__content .article-text .article-text2 p{color:#ae3b44;font-family:Arial,Helvetica Neue,Helvetica,sans-serif;font-size:15px;font-weight:400;letter-spacing:-.1px}.main .container__section .page__content .article-text .buttons__block{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}.main .container__section .page__content .article-text .buttons__block a{text-decoration:none;color:#ae3b44;transition:all .2s ease-in-out;margin-top:23px}.main .container__section .page__content .article-text .buttons__block a:hover{color:#000}.main .container__section .page__content .article-text .buttons__block a:first-child:before{content:"\f137";font-family:fontAwesome;margin-right:10px}.main .container__section .page__content .article-text .buttons__block a:last-child:after{content:"\f138";font-family:fontAwesome;margin-left:10px}.main .clients .container{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row;-ms-flex-pack:justify;justify-content:space-between;-ms-flex-align:center;align-items:center;padding-top:25px;padding-bottom:25px}.main .clients .container p{color:#212121;font-family:Arial,Helvetica Neue,Helvetica,sans-serif;font-size:18px;font-weight:400;letter-spacing:-.12px}.main .clients .container img{width:auto;height:41px}.bg1{background:#fefefe}.bg2{background:#f4f7f8}.bg3{background:#eaeaea}.arrow-down:after{content:"\f078";font-family:fontAwesome;position:absolute;font-size:10px;display:inline-block;top:22px;right:15px}.footer{background:#f8f8f8;box-shadow:0 4px 11px 0 rgba(0,0,0,.75)}.footer .flex-container{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between;min-width:980px;max-width:980px;margin:0 auto}.footer .flex-container .flex-item:nth-child(2),.footer .flex-container .flex-item:nth-child(3){margin-top:42px}.footer .flex-container .flex-item p{opacity:.5;color:#393939;font-family:Arial,Helvetica Neue,Helvetica,sans-serif;font-size:15px;font-weight:400;letter-spacing:-.1px}.footer .flex-container .flex-item p:last-child{opacity:.3;color:#393939;font-family:Arial,Helvetica Neue,Helvetica,sans-serif;font-size:11px;font-weight:400;line-height:19px}.footer .flex-container .flex-item ul{padding-left:0}.footer .flex-container .flex-item ul li{list-style-type:none}.footer .flex-container .flex-item ul li a{text-decoration:none;opacity:.3;color:#393939;font-family:Arial,Helvetica Neue,Helvetica,sans-serif;font-size:12px;font-weight:400;line-height:19px}.footer .flex-container .flex-item .social__wrapper a{width:24px;height:25px;background:url(../img/soc-nav.png);transition:all .2s ease-in-out}.footer .flex-container .flex-item .social__wrapper a:first-child{background-position:-34px 0;display:inline-block}.footer .flex-container .flex-item .social__wrapper a:first-child:hover{background-position:-5px 0}.footer .flex-container .flex-item .social__wrapper a:nth-child(2){background-position:-34px -29px;display:inline-block}.footer .flex-container .flex-item .social__wrapper a:nth-child(2):hover{background-position:-5px -29px}.footer .flex-container .flex-item .social__wrapper a:nth-child(3){background-position:-34px -58px;display:inline-block}.footer .flex-container .flex-item .social__wrapper a:nth-child(3):hover{background-position:-5px -58px}.footer .flex-container .flex-item .social__wrapper a:nth-child(4){background-position:-34px -87px;display:inline-block}.footer .flex-container .flex-item .social__wrapper a:nth-child(4):hover{background-position:-5px -87px}.header,.main{max-width:980px;min-width:980px;margin:0 auto}::selection{background:#333;color:#fff;text-shadow:none}::-moz-selection{background:#333;color:#fff;text-shadow:none}::-webkit-selection{background:#333;color:#fff;text-shadow:none}@media print{*{background:transparent!important;color:#000!important;box-shadow:none!important;text-shadow:none!important}a,a:visited{text-decoration:underline}a[href]:after{content:" (" attr(href) ")"}abbr[title]:after{content:" (" attr(title) ")"}.ir a:after,a[href^="#"]:after,a[href^="javascript:"]:after{content:""}blockquote,pre{border:1px solid #999;page-break-inside:avoid}thead{display:table-header-group}img,tr{page-break-inside:avoid}img{max-width:100%!important}@page{margin:.5cm}h2,h3,p{orphans:3;widows:3}h2,h3{page-break-after:avoid}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
